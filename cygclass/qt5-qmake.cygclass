################################################################################
#
# qt5-qmake.cygclass - functions for building QMake-based Qt5 packages
#
# Part of cygport - Cygwin packaging application
# Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013 Yaakov Selkowitz
# Provided by the Cygwin Ports project <http://sourceware.org/cygwinports/>
#
# cygport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cygport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cygport.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

#****h* Cygclasses/qt5-qmake.cygclass
#  SYNOPSIS
#  inherit qt5-qmake
#  DESCRIPTION
#  This cygclass builds Qt5-based packages which use the qmake build system,
#  including the Qt5 non-base components themselves.
#  INHERITS
#  qt5.cygclass
#****

inherit qt5

#****C* qt5-qmake.cygclass/cygqmake5
#  SYNOPSIS
#  cygqmake5 FILE_OR_DIRECTORY
#  DESCRIPTION
#  Generates Makefiles from the specified qmake project file (or directory
#  containing such file).
#****
cygqmake5() {
	if [ ! -x ${QT5_QMAKE} ]
	then
		error "libQt5Core-devel is required to build this package"
	fi

	${QT5_QMAKE} -spec ${QMAKESPEC} -recursive \
		QMAKE_CC=${CC} \
		QMAKE_CFLAGS_RELEASE="${CFLAGS}" \
		QMAKE_CXX=${CXX} \
		QMAKE_CXXFLAGS_RELEASE="${CXXFLAGS}" \
		QMAKE_LINK=${CXX} \
		QMAKE_LINK_SHLIB=${CXX} \
		QMAKE_LINK_C=${CC} \
		QMAKE_LINK_C_SHLIB=${CC} \
		QMAKE_LFLAGS="${LDFLAGS}" \
		QMAKE_LFLAGS_RPATH= \
		QMAKE_INCDIR_QT=${QT5_INCLUDEDIR} \
		QMAKE_LIBDIR_QT=${QT5_LIBDIR} \
		QMAKE_MOC=${QT5_MOC} \
		QMAKE_RCC=${QT5_RCC} \
		QMAKE_UIC=${QT5_UIC} \
		QMAKE_AR="${AR} cqs" \
		QMAKE_OBJCOPY=${OBJDUMP/dump/copy} \
		QMAKE_RANLIB=${RANLIB} \
		QMAKE_STRIP=: \
		${CYGQMAKE5_ARGS} ${@} \
		|| error "qmake failed"
}

#****C* qt5-qmake.cygclass/qt5_qmake_compile
#  DEFINITION
qt5_qmake_compile() {
	cygqmake5 ${S}
	cygmake
}
#****

#****I* qt5-qmake.cygclass/qt5_qmake_install
#  SYNOPSIS
#  cd $B
#  qt5_qmake_install
#  DESCRIPTION
#  Installs the package into $D and fixes some common installation issues.
#  WARNING
#  Many qmake projects do not define correct install rules, if any at all.
#  qt5_qmake_install is of no use in such cases; you must use manual
#  installation commands instead.
#****
qt5_qmake_install() {
	local dll pc

	make install INSTALL_ROOT=${D} || error "make install failed"

	for dll in $(find ${D}$(__host_prefix)/lib/ -maxdepth 1 -name '*.dll' 2> /dev/null)
	do
		dodir $(__host_prefix)/bin
		mv ${dll} ${D}$(__host_prefix)/bin/
	done
}

#****o* qt5-qmake.cygclass/src_compile (qt5-qmake)
#  DEFINITION
src_compile() {
	cd ${B}
	qt5_qmake_compile
}
#****

#****o* qt5-qmake.cygclass/src_install (qt5-qmake)
#  DEFINITION
src_install() {
	cd ${B}
	qt5_qmake_install
}
#****

readonly -f cygqmake5 qt5_qmake_compile qt5_qmake_install
