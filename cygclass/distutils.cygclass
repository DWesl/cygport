################################################################################
#
# distutils.cygclass - functions for building Distutils Python modules
#
# Part of cygport - Cygwin packaging application
# Copyright (C) 2006, 2007, 2008, 2009 Yaakov Selkowitz
# Provided by the Cygwin Ports project <http://sourceware.org/cygwinports/>
#
# cygport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cygport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cygport.  If not, see <http://www.gnu.org/licenses/>.
#
# $Id$
#
################################################################################

#****h* Cygclasses/distutils.cygclass
#  NAME
#    distutils.cygclass -- Build Python packages with distutils
#  DESCRIPTION
#    Distutils is the most common method for building and installing Python
#    libraries and programs.  The build is defined by a setup.py file in the
#    top source directory, which controls the installation of files and the
#    building of C Python extensions.  Many such packages are hosted on the
#    Python Package Index (PyPI, previously known as Cheeseshop).
#
#    This cygclass handles the building of distutils-based packages.
#  INHERITS
#    python.cygclass
#  REQUIRES
#    python
#****
inherit python

ORIG_PN=${ORIG_PN:-${PN#python-}}

#****o* distutils.cygclass/HOMEPAGE (distutils)
#  DEFINITION
HOMEPAGE="http://pypi.python.org/pypi/${ORIG_PN}"
#****

#****o* distutils.cygclass/SRC_URI (distutils)
#  DEFINITION
SRC_URI="http://pypi.python.org/packages/source/${ORIG_PN:0:1}/${ORIG_PN}/${ORIG_PN}-${PV}.tar.gz"
#****

#****f* distutils.cygclass/distutils_compile
#  SYNOPSIS
#    distutils_compile [OPTIONS]
#  DESCRIPTION
#    Runs the setup.py 'config' and 'build' commands.  All arguments are passed
#    to the setup.py 'build' command.
#****
distutils_compile() {
	if [ ! -e setup.py ]
	then
		error "No Python Distutils module detected"
	fi

	${PYTHON} setup.py config || error "setup.py config failed"
	${PYTHON} setup.py build "${@}" || error "setup.py build failed"
}

distutils_test() {
	:
}

#****f* distutils.cygclass/distutils_install
#  SYNOPSIS
#    distutils_install [OPTIONS]
#  DESCRIPTION
#    Runs the setup.py 'install' phase, setting the root argument to install
#    into $D, followed by python_optimize.  All arguments are passed to the
#    setup.py 'install' command.
#****
distutils_install() {
	if [ ! -e setup.py ]
	then
		error "No Python Distutils module detected"
	fi

	${PYTHON} setup.py install -O0 --root=${D} "${@}" || error "setup.py install failed"

	# only zope.interface should provide zope.__init__ because
	# (almost) all other zope modules depend on it
	case ${PN} in
		zope.interface) ;;
		zope.*)  rm -f ${D}${PYTHON_SITELIB}/zope/__init__.py* ;;
	esac

	if [ -d ${D}${PYTHON_SITELIB} ]
	then
		python_optimize ${PYTHON_SITELIB}
	fi
}

#****o* distutils.cygclass/src_compile (distutils)
#  DEFINITION
src_compile() {
	lndirs
	cd ${B}
	distutils_compile
}
#****

src_test() {
	distutils_test
}

#****o* distutils.cygclass/src_install (distutils)
#  DEFINITION
src_install() {
	cd ${B}
	distutils_install
}
#****

readonly -f distutils_compile distutils_test distutils_install
