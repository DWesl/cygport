#!/bin/bash
################################################################################
#
# prep_libtool_modules.sh - removes static and import libraries for libtool modules
# Part of cygport - Cygwin packaging application
# Copyright (C) 2006 Yaakov Selkowitz
# Provided by the Cygwin Ports project <http://cygwinports.dotsrc.org/>
# Distributed under the terms of the GNU General Public License v2
#
# $Id: prep_libtool_modules.sh,v 1.7 2007-06-10 07:15:37 yselkowitz Exp $
#
################################################################################
set -e

declare -r ltversion="$(/usr/bin/libtool --version | /bin/grep ltmain.sh)"

echo "Fixing libtool modules:"

for lib_la in "${@}"
do
	if [ ! -f ${lib_la} ]
	then
		error "file ${lib_la} does not exist!"
	fi

	if ! grep -q "libtool library file" ${lib_la}
	then
		continue    # go to next iteration of for loop
	fi

	source ${lib_la}

	# Only a -module should be "fixed" in this way
	if [ "x${shouldnotlink}" = "xyes" ]
	then
		echo "        ${lib_la}"

		declare ltlibdir=${lib_la%/*}
		declare ltlibname=$(echo ${lib_la##*/} | sed -e 's:\.la$::')

		if [ "x${dlname}" = "x" ]
		then
			error "${lib_la} dynamic module was not built"
		fi

		# warn if -avoid-version was not used with -module (which 99.9% of time should be)
		if [ "${dlname#../bin/}" != "cyg${ltlibname#lib}.dll" \
		     -a "${dlname#../bin/}" != "${ltlibname}.dll" \
		     -a "${dlname}" != "${ltlibname}.so" ]
		then
			warning "${lib_la} appears to be a versioned module."
		fi

		rm -f ${ltlibdir}/${ltlibname}.a ${ltlibdir}/${ltlibname}.dll.a

		cat > ${lib_la} <<-_EOF
			# ${ltlibname}.la - a libtool library file
			# Generated by ${ltversion}
			#
			# Please DO NOT delete this file!
			# It is necessary for linking the library.
			
			# The name that we can dlopen(3).
			dlname='${dlname}'
			
			# Names of this library.
			library_names='${dlname}'
			
			# The name of the static archive.
			old_library=''
			
			# This is set to empty to speed up lt_dlopen and friends.
			dependency_libs=''
			
			# Version information for ${ltlibname}.
			current=${current}
			age=${age}
			revision=${revision}
			
			# Is this an already installed library?
			installed=yes
			
			# Should we warn about portability when linking against -modules?
			shouldnotlink=yes
			
			# Files to dlopen/dlpreopen
			dlopen=''
			dlpreopen=''
			
			# Directory that this library needs to be installed in:
			libdir='${libdir}'
			_EOF
	else
		true
	fi	# shouldnotlink = yes #
done
