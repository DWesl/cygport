################################################################################
#
# syntax.cygpart - cygport syntax enhancement functions
#
# Copyright (C) 2006, 2007, 2008, 2009 Yaakov Selkowitz
# Provided by the Cygwin Ports project <http://sourceware.org/cygwinports/>
#
# cygport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cygport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cygport.  If not, see <http://www.gnu.org/licenses/>.
#
# $Id$
#
################################################################################

#****** Format/Syntax
#  DESCRIPTION
#    This section includes functions which provide some syntactical sugar.
#    These functions can be used anywhere.
#****

#****f* Syntax/defined
#  SYNOPSIS
#    if defined VARIABLE_NAME; then [...]; fi
#  DESCRIPTION
#    Tests if the given variable name is defined.  Returns TRUE if so, else FALSE.
#****
defined() {
	if (( $# != 1 ))
	then
		error "defined accepts exactly one argument"
	fi

	if [ -n "${!1}" ]
	then
		return 0;
	else
		return 1;
	fi
}

#****f* Syntax/pushd
#  SYNOPSIS
#    pushd DIRECTORY
#  DESCRIPTION
#    A silent wrapper for the bash pushd directory stack builtin.
#****
pushd() {
	builtin pushd ${@} > /dev/null
}

#****f* Syntax/popd
#  SYNOPSIS
#    popd
#  DESCRIPTION
#    A silent wrapper for the bash popd directory stack builtin.
#****
popd() {
	builtin popd ${@} > /dev/null
}

#****** Format/Messages
#  DESCRIPTION
#    This section includes functions which provide output to the user.
#    These functions may be used anywhere.
#****

#****f* Messages/error
#  SYNOPSIS
#    error MESSAGE
#  DESCRIPTION
#    Declares a fatal error.  The given message is displayed, then cygport exits.
#****
error() {
	case $? in
		0) local errorcode=1 ;;
		*) local errorcode=$? ;;
	esac

	echo -e "\e[1;31m*** ERROR:\e[0;0m ${1:-no error message provided}" > /dev/stderr;
	exit ${errorcode};
}

#****f* Messages/warning
#  SYNOPSIS
#    warning MESSAGE
#  DESCRIPTION
#    Displays a warning message before continuing.
#****
warning() {
	echo -e "\e[1;33m*** Warning:\e[0;0m ${1}";
}

#****f* Messages/inform
#  SYNOPSIS
#    inform MESSAGE
#  DESCRIPTION
#    Displays an informational message.
#****
inform() {
	echo -e "\e[1;32m*** Info:\e[0;0m ${1}";
}

#****f* Messages/verbose
#  SYNOPSIS
#    verbose COMMAND
#  DESCRIPTION
#    Echoes the given command before executing it.  Returns the exit code of
#    the given command.
#****
verbose() {
	echo "${@}"
	"${@}"
	return $?
}

#****if* Syntax/__stage
#****
__stage() {
	echo -e "\e[1;39m>>> ${1} ${PF}\e[0;0m";
}

#****if* Syntax/__step
#****
__step() {
	echo -e ">>> ${1}";
}

readonly -f defined pushd popd error warning inform verbose __stage __step
