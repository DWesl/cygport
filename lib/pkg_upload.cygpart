################################################################################
#
# pkg_upload.cygpart - cygport package uploading functions
#
# Copyright (C) 2014 Andrew Schulman
# Provided by the Cygwin Ports project <http://sourceware.org/cygwinports/>
#
# cygport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cygport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cygport.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

__pkg_upload() {
	local cmd;
	local pkg_file;
	local pn;

#****v* Uploading/SSH_KEY
#  DESCRIPTION
#  The file name of an ssh private key to use in connecting to cygwin.com.
#  Obviously this has to match the public key you provided for uploading.
#  If you have already have your private key loaded into a running ssh-agent(1),
#  or if the key file has one of the expected file names such as ~/.ssh/id_rsa,
#  then you probably don't need to set this.
#****

	# Check that binary and source package files exist
	for pn in ${pkg_name[*]}
	do
		for pkg_file in "${pn}-${PVR}.tar.xz" "${pn}-${PVR}-src.tar.xz"
		do
			if [ ! -f "${distdir}/${pn}/${pkg_file}" ]
			then
				error "Package file ${pkg_file} doesn't exist. Run \"cygport ${cygportfile} pkg\" to build it."
			fi
		done
	done

	# Upload by lftp
	cd "${distdir}"
	{
		echo "set cmd:fail-exit on"
		echo "set cmd:interactive on"
		echo "set net:max-retries 1"

		if [ "$SSH_KEY" ]
		then
			echo "set sftp:connect-program ssh -a -x -i '${SSH_KEY}'"
		fi

		echo "open sftp://cygwin:@cygwin.com"
		echo "cd ${CYGPORT_ARCH}/release"

		for pn in ${pkg_name[*]}
		do
			echo "mirror -v -eR ${pn}"
		done

		echo "put /dev/null -o !roady"

	} | lftp -f/dev/stdin \
	|| error "Upload failed"

}

# protect functions
readonly -f __pkg_upload
